JS: Promises â€“ Make, use, understand
See the example below to see the difference between a Promise which is created, and how this Promise is called and should be "handled".

(a Promise is a "promise", and hereby Santa offers you the promise for a new iPhone 11 - if you've been good). Copy and paste the code into your code editor and study what happens.

const santaIsGenerous = true;

 // Make a promise (so you don't have to learn this, this is on the API (back-end) side)
 const willIGetANewIphone = new Promise(
     (resolve, reject) => {
         if (santaIsGenerous) {
             const smartphone = {
                 brand: 'Apple',
                 type: 'iPhone 11'
             };
             resolve(smartphone);
         } else {
             const withWhatReason = new Error("You've been naughty, no gifts for you");
             reject(withWhatReason);
         }

     }
 );

 // Call Promise, or "consume" (you will do this and thus have to learn it, in contrast to creating above promise)
 const askSanta = () => {
     willIGetANewIphone
         .then(function (resolved) {
             // yay, you got a new Iphone
             console.log(resolved);
         })
         .catch(function (error) {
             // whoops, no present from Santa this year...
             console.log(error.message);
         });
 }

 askSanta();